<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools &amp; API on UPPAAL Documentation</title><link>/toolsandapi/</link><description>Recent content in Tools &amp; API on UPPAAL Documentation</description><generator>Hugo</generator><language>en-us</language><atom:link href="/toolsandapi/index.xml" rel="self" type="application/rss+xml"/><item><title>UPPAAL</title><link>/toolsandapi/uppaal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/toolsandapi/uppaal/</guid><description>UPPAAL can be executed from the command line using the following command on unix:
uppaal [OPTION] &amp;hellip; [FILENAME]
On windows, the following command can be used (for instance, using &amp;ldquo;Run&amp;rdquo; from the Start Menu):
java -jar \path\uppaal.jar [OPTION] &amp;hellip; [FILENAME]
where path is the complete path to the uppaal.jar file (it might also be necessary to specify the complete path to the java executable).
The optional filename refers to a model to be loaded at startup.</description></item><item><title>verifyta</title><link>/toolsandapi/verifyta/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/toolsandapi/verifyta/</guid><description>The verifier functionality is accessible through verifyta command line utility in bin directory of the UPPAAL distribution.
The supported options are displayed when running verifyta -h or verifyta --help.</description></item><item><title>Java API</title><link>/toolsandapi/javaapi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/toolsandapi/javaapi/</guid><description>UPPAAL models can be created, loaded, saved, simulated and checked using libs/model.jar library. There is also javadoc included libs/model-javadoc.jar.
A demonstrating example is included in the demo/ModelDemo.java file.</description></item><item><title>Socketserver</title><link>/toolsandapi/socketserver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/toolsandapi/socketserver/</guid><description>To start a remote server, use the socketserver binary (included for Linux, SunOS and MacOS). To use a remote server, see the section on command line options for the GUI.
The socketserver can be executed from the command line using one of the following commands:
socketserver [-p] [-s]
socketserver -h
The available command line options are:
-h Prints a brief description of the command line options. -p Set port in server mode (default is 2350).</description></item><item><title>File Formats</title><link>/toolsandapi/file-formats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/toolsandapi/file-formats/</guid><description>UPPAAL supports three file formats for models: XML, XTA and TA. XML and XTA files can be loaded and stored via the Open Project, Open System, Save System, and Save System As menus. When saving a file, the file type is determined by the file name extension used. Each format is explained in more details below.
Notice that the above mentioned file formats are mostly independent from the type of changes made to the syntax between UPPAAL 3.</description></item><item><title>Latex</title><link>/toolsandapi/latex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/toolsandapi/latex/</guid><description>UPPAAL web site includes links to uppaal.sty file â€” style for typesetting documents in LaTeX.
UPPAAL Latex</description></item></channel></rss>