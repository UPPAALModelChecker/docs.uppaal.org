<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Query Syntax on UPPAAL Documentation</title><link>/language-reference/query-syntax/</link><description>Recent content in Query Syntax on UPPAAL Documentation</description><generator>Hugo</generator><language>en-us</language><atom:link href="/language-reference/query-syntax/index.xml" rel="self" type="application/rss+xml"/><item><title>Syntax of Symbolic Queries</title><link>/language-reference/query-syntax/symbolic_queries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/language-reference/query-syntax/symbolic_queries/</guid><description>&lt;h2 id="symbolic-queries">Symbolic Queries&lt;/h2>
&lt;p>Symbolic queries are performed using symbolic operations based on symbolic semantics of timed automata and correspond to a mathematically rigorous proof.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-EBNF" data-lang="EBNF">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SymbolicQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::&lt;/span>&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;A[]&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Expression Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;E&amp;lt;&amp;gt;&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Expression Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;E[]&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Expression Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;A&amp;lt;&amp;gt;&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Expression Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">Expression --&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Expression Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;sup&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;sup&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Predicate &lt;/span>&lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;inf&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;inf&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Predicate &lt;/span>&lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;bounds&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;bounds&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Predicate &lt;/span>&lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">List &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#66d9ef">Expression &lt;/span>| &lt;span style="color:#66d9ef">Expression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Predicate &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#66d9ef">Expression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Subjection &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#960050;background-color:#1e0010">//&lt;/span> &lt;span style="color:#66d9ef">empty for no subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#66d9ef">under StrategyName&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;dl>
&lt;dt>&lt;tt>Predicate&lt;/tt>&lt;/dt>
&lt;dd>an expression over a system state evaluating to either &lt;code>true&lt;/code> or &lt;code>false&lt;/code>. The predicate typically refers to a process location, but it can also use integers, logical operations and clock constraints.&lt;/dd>
&lt;dt>&lt;tt>Subjection&lt;/tt>&lt;/dt>
&lt;dd>indicates whether the query should be subjected to a strategy.&lt;/dd>
&lt;/dl>
&lt;p>For &lt;code>sup&lt;/code> and &lt;code>bounds&lt;/code> queries, the list of expressions may not contain clock constraints and must evaluate to either an integer or a clock.&lt;/p></description></item><item><title>Syntax of Controller Synthesis</title><link>/language-reference/query-syntax/controller_synthesis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/language-reference/query-syntax/controller_synthesis/</guid><description>&lt;h2 id="controller-synthesis-queries">Controller Synthesis Queries&lt;/h2>
&lt;p>Controller synthesis queries are decided using symbolic techniques over Timed Game (TIGA) automata, where the discrete actions are either controllable (controller&amp;rsquo;s actions, solid edges) or uncontrollable (environment actions, dashed edges). The result is either a strategy solving the game objective or that the strategy does not exist.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-EBNF" data-lang="EBNF">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ControlQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::&lt;/span>&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ControlSpecifier Goal Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">CollaborativeControlSpecifier Goal Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">PartialControlSpecifier Goal Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">TimeEfficientGameSpecifier Goal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ControlSpecifier &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;control:&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CollaborativeControlSpecifier &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;E&amp;lt;&amp;gt;&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;control:&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">PartialControlSpecifier &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List &lt;/span>&lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;control:&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">TimeEfficientGameQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;control_t*&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">GameTimeLimitExpression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">LocalGameTimeLimitExpression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;):&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;control_t*&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">u &lt;/span>&lt;span style="color:#e6db74">&amp;#39;):&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;control_t*:&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Goal &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;A&amp;lt;&amp;gt;&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">WinExpression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;A[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">NotLoseExpression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;U&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">WinExpression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;A[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">NotLoseExpression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;W&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">WinExpression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;A[]&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">NotLoseExpression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WinExpression &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#66d9ef">Expression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">NotLoseExpression &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#66d9ef">Expression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">GameTimeLimitExpression &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#66d9ef">Expression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">LocalGameTimeLimitExpression &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#66d9ef">Expression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Subjection &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#960050;background-color:#1e0010">//&lt;/span> &lt;span style="color:#66d9ef">empty for no subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#66d9ef">under StrategyName&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;dl>
&lt;dt>&lt;tt>GameTimeLimitExpression&lt;/tt>&lt;/dt>
&lt;dd>describes a time limit within the game must be won. This expression is only evaluated once at the beginning, thus should not depend on the current state.&lt;/dd>
&lt;dt>&lt;tt>LocalGameTimeLimitExpression&lt;/tt>&lt;/dt>
&lt;dd>describes an additional time limit such that the game can be won within &lt;tt>GameTimeLimitExpression - LocalGameTimeLimitExpression&lt;/tt> time units. This expression is evaluated in each state, and can therefore depend on state or clock constraints. Must be side-effect free.&lt;/dd>
&lt;/dl>
&lt;p>See &lt;a href="/grammar/#ControlQuery">rail road diagram for the entire ControlQuery syntax&lt;/a>.&lt;/p></description></item><item><title>Syntax of Statistical Queries</title><link>/language-reference/query-syntax/statistical_queries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/language-reference/query-syntax/statistical_queries/</guid><description>&lt;h2 id="statistical-queries">Statistical Queries&lt;/h2>
&lt;p>Statistical queries are decided using concrete semantics of stochastic hybrid automata over a number of bounded concrete simulation runs and correspond to empirical measurements of the system performance. The results are of statistical estimate nature and may vary across different executions based on uncertainties specified in &lt;a href="/gui-reference/menu-bar/options/#statparam">Statistical parameters&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-EBNF" data-lang="EBNF">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SMCQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::&lt;/span>&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#66d9ef">Simulate Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">Probability Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">ProbUntil Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">Probability &lt;/span>( &lt;span style="color:#e6db74">&amp;#39;&amp;lt;=&amp;#39;&lt;/span> | &lt;span style="color:#e6db74">&amp;#39;&amp;gt;=&amp;#39;&lt;/span> ) &lt;span style="color:#66d9ef">PROB Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">Probability Subjection &lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;gt;=&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Probability Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#66d9ef">Estimate Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Simulate &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;simulate&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">SMCBounds &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List &lt;/span>&lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span> [ &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> [ &lt;span style="color:#66d9ef">SATRUNS &lt;/span>&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> ] &lt;span style="color:#66d9ef">Expression &lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Probability &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Pr&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">MITLExpression&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | &lt;span style="color:#e6db74">&amp;#39;Pr[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">SMCBounds &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">PathType Expression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ProbUntil &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Pr[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">SMCBounds &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Expression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;U&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Expression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Estimate &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;E[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">SMCBounds &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;min:&amp;#39;&lt;/span> | &lt;span style="color:#e6db74">&amp;#39;max:&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">Expression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SMCBounds &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#66d9ef">BoundType &lt;/span>[ ; &lt;span style="color:#66d9ef">RUNS &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">BoundType &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::&lt;/span>&lt;span style="color:#f92672">=&lt;/span> ( | &lt;span style="color:#66d9ef">Clock &lt;/span>| &lt;span style="color:#e6db74">&amp;#39;#&amp;#39;&lt;/span> ) &lt;span style="color:#e6db74">&amp;#39;&amp;lt;=&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">BOUND&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">PathType &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> ( &lt;span style="color:#e6db74">&amp;#39;&amp;lt;&amp;gt;&amp;#39;&lt;/span> | &lt;span style="color:#e6db74">&amp;#39;[]&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Subjection &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#960050;background-color:#1e0010">//&lt;/span> &lt;span style="color:#66d9ef">empty for no subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#66d9ef">under StrategyName&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;dl>
&lt;dt>&lt;tt>BOUND&lt;/tt>&lt;/dt>
&lt;dd>is a non-negative integer constant denoting an upper bound over the absolute global time (when a variable is not specified), specific &lt;tt>Clock&lt;/tt> (cost) variable or a number of action-transitions (&lt;tt>#&lt;/tt>).&lt;/dd>
&lt;dt>&lt;tt>RUNS&lt;/tt>&lt;/dt>
&lt;dd>is an optional positive integer constant denoting the maximum number of runs. If the number of runs is not specified, then it is decided based on &lt;a href="/gui-reference/menu-bar/options/#statparam">Statistical parameters&lt;/a> and the particular estimation algorithm.&lt;/dd>
&lt;dt>&lt;tt>SATRUNS&lt;/tt>&lt;/dt>
&lt;dd>is an optional positive integer constant denoting the maximum number of runs that satisfy the state expression.&lt;/dd>
&lt;dt>&lt;tt>PROB&lt;/tt>&lt;/dt>
&lt;dd>is a floating point number from interval &lt;tt>[0; 1]&lt;/tt> denoting a probability bound.&lt;/dd>
&lt;dt>&lt;tt>&amp;rsquo;#&amp;rsquo;&lt;/tt>&lt;/dt>
&lt;dd>means a number of simulation steps &amp;ndash; discrete edge-transitions &amp;ndash; in the run.&lt;/dd>
&lt;dt>&lt;tt>&amp;lsquo;min:&amp;rsquo;&lt;/tt>&lt;/dt>
&lt;dd>means the minimum value over a run of the proceeding expression.&lt;/dd>
&lt;dt>&lt;tt>&amp;lsquo;max:&amp;rsquo;&lt;/tt>&lt;/dt>
&lt;dd>means the maximum value over a run of the proceeding expression.&lt;/dd>
&lt;/dl>
&lt;p>All expressions are state predicates and must be side effect free. It is possible to test whether a certain process is in a given location using expressions on the form &lt;tt>process.location&lt;/tt>.&lt;/p></description></item><item><title>Syntax of Learning Queries</title><link>/language-reference/query-syntax/learning_queries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/language-reference/query-syntax/learning_queries/</guid><description>&lt;h2 id="learning-queries">Learning Queries&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-EBNF" data-lang="EBNF">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">LearningQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::&lt;/span>&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ExpQuantifier &lt;/span>&lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Expression &lt;/span>&lt;span style="color:#e6db74">&amp;#39;)&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">BoundType &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Features&lt;/span>? &amp;#39;:&amp;#39; PathType Expression Subjection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | ExpQuantifier &amp;#39;[&amp;#39; BoundType &amp;#39;]&amp;#39; Features? &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">PathType Expression Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#66d9ef">ExpPrQuantifier &lt;/span>&lt;span style="color:#e6db74">&amp;#39;[&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">BoundType &lt;/span>&lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Features&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">?&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">PathType Expression Subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ExpQuantifier &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> ( &lt;span style="color:#66d9ef">minE &lt;/span>| &lt;span style="color:#66d9ef">maxE &lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ExpPrQuantifier &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> ( &lt;span style="color:#66d9ef">minPr &lt;/span>| &lt;span style="color:#66d9ef">maxPr &lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Features &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List &lt;/span>&lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;-&amp;gt;&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">List &lt;/span>&lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Subjection &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#960050;background-color:#1e0010">//&lt;/span> &lt;span style="color:#66d9ef">empty for no subjection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#66d9ef">under StrategyName&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;dl>
&lt;dt>&lt;code>Features&lt;/code>&lt;/dt>
&lt;dd>describes a mapping (state space partition) from a partial state to a player action. The first list maps in the discrete space (values interpreted as distinct categories) and the second list maps in continuous space (assumes distance between values: similar values yield similar cost).&lt;/dd>
&lt;/dl>
&lt;p>See &lt;a href="/grammar/#LearnQuery">rail road diagram for the entire LearningQuery syntax&lt;/a>.&lt;/p></description></item><item><title>Syntax of Strategy Queries</title><link>/language-reference/query-syntax/strategy_queries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/language-reference/query-syntax/strategy_queries/</guid><description>&lt;h2 id="strategy-queries">Strategy Queries&lt;/h2>
&lt;p>Strategy queries allow store, load, reuse and refine the strategies by assigning names to them.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-EBNF" data-lang="EBNF">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">AssignQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::&lt;/span>&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#e6db74">&amp;#39;strategy&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">StrategyName &lt;/span>&lt;span style="color:#e6db74">&amp;#39;=&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">AssignableQuery&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">AssignableQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ControlQuery&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#66d9ef">LearningQuery&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#e6db74">&amp;#39;loadStrategy&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Features &lt;/span>&lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Path &lt;/span>&lt;span style="color:#e6db74">&amp;#39;)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">NonAssignableQuery &lt;/span>&lt;span style="color:#960050;background-color:#1e0010">::=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SymbolicQuery&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#66d9ef">SMCQuery&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 | &lt;span style="color:#e6db74">&amp;#39;saveStrategy&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;(&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">Path &lt;/span>&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">StrategyName &lt;/span>&lt;span style="color:#e6db74">&amp;#39;)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;dl>
&lt;dt>&lt;tt>StrategyName&lt;/tt>&lt;/dt>
&lt;dd>indicates the name of a strategy.&lt;/dd>
&lt;dt>&lt;tt>Path&lt;/tt>&lt;/dt>
&lt;dd>is a double-quoted (using &lt;code>&amp;quot;&lt;/code>) character sequence (string) denoting a file path on the same computer as the used engine (&lt;code>server&lt;/code> or &lt;code>verifyta&lt;/code>).&lt;br>
Note that the backslash (&lt;code>\&lt;/code>) character in (Windows) paths needs to be either escaped with another backslash or replaced with the forwardslash (&lt;code>/&lt;/code>), i.e. &lt;code>\&lt;/code> should be replaced with either &lt;code>\\&lt;/code> or &lt;code>/&lt;/code>.&lt;/dd>
&lt;/dl>
&lt;p>See &lt;a href="/grammar/#Query">rail road diagram of AssignableQuery in Query overview&lt;/a>.&lt;/p></description></item></channel></rss>